// This is your Prisma schema file for MongoDB
// Learn more about MongoDB with Prisma: https://pris.ly/d/mongodb

datasource db {
  provider = "mongodb"
  url      = env("PRISMA_DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  username       String  @unique
  imageUrl       String
  externalUserId String  @unique
  bio            String?

  following  Follow[] @relation("Following")
  followedBy Follow[] @relation("FollowedBy")

  blocking Block[] @relation("Blocking")
  blockedBy Block[] @relation("BlockedBy")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  stream Stream?
}

model Stream {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  thumbnailUrl     String?

  ingressId        String?  @unique
  serverUrl        String?
  streamKey        String?

  isLive           Boolean  @default(false)
  isChatEnabled    Boolean  @default(true)
  isChatDelayed    Boolean  @default(false)
  isChatFollowersOnly Boolean @default(false)

  userID           String   @unique @db.ObjectId
  user             User     @relation(fields: [userID], references: [id])

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Follow {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  followerId  String @db.ObjectId
  followingId String @db.ObjectId

  follower    User   @relation(name: "Following", fields: [followerId], references: [id])
  following   User   @relation(name: "FollowedBy", fields: [followingId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([followerId, followingId])
}

model Block {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  blockerId   String @db.ObjectId
  blockedId   String @db.ObjectId

  blocker     User   @relation(name: "Blocking", fields: [blockerId], references: [id])
  blocked     User   @relation(name: "BlockedBy", fields: [blockedId], references: [id])

  @@unique([blockerId, blockedId])
}
